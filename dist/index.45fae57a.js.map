{"mappings":"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","sources":["node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/util.js","node_modules/ol/src/Object.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/Feature.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/transform.js","node_modules/ol/src/has.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/math.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/sphere.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/proj.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/GeometryCollection.js","node_modules/ol/src/format/Feature.js","node_modules/ol/src/format/FormatType.js","node_modules/ol/src/format/JSONFeature.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/interpolate.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/geom/LineString.js","node_modules/ol/src/geom/MultiLineString.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/MultiPoint.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/geom/flat/center.js","node_modules/ol/src/geom/MultiPolygon.js","node_modules/ol/src/format/GeoJSON.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/dom.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/size.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/geom/Circle.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/layer/BaseVector.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/Image.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/layer/Vector.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/source/Vector.js","node_modules/ol/src/interaction/Draw.js","node_modules/ol/src/interaction/Modify.js","node_modules/ol/src/interaction/Snap.js","node_modules/ol/src/interaction.js","node_modules/ol/src/Map.js","main.js"],"sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n            listeners[i]\n          ).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n            listeners[i]\n          ).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature<import(\"./geom/Geometry.js\").default>|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [opt_geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES,\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [opt_geometries] Geometries.\n   */\n  constructor(opt_geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.GEOMETRY_COLLECTION;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {assign} from '../obj.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      let dataProjection = opt_options.dataProjection\n        ? getProjection(opt_options.dataProjection)\n        : this.readProjection(source);\n      if (\n        opt_options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === Units.TILE_PIXELS\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(opt_options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: opt_options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, opt_options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [opt_options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    opt_options &&\n    /** @type {WriteOptions} */ (opt_options).decimals !== undefined\n  ) {\n    const power = Math.pow(\n      10,\n      /** @type {WriteOptions} */ (opt_options).decimals\n    );\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [opt_options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.JSON;\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, opt_options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, opt_options) {\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, opt_options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [opt_interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\n    if (\n      (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<Array<number>>} [opt_endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, opt_layout, opt_endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      let layout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const endss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        opt_right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(\n      this.getFlatInteriorPoints().slice(),\n      GeometryLayout.XYM\n    );\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEndss\n    );\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, opt_options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, opt_options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(\n          this.readFeatureFromObject(geoJSONFeatures[i], opt_options)\n        );\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, opt_options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, opt_options) {\n    return readGeometry(object, opt_options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, opt_options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], opt_options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case GeometryType.POINT: {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object.type);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, opt_options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, opt_options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  geometry = transformGeometryWithOptions(geometry, true, opt_options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case GeometryType.POINT: {\n      geoJSON = writePointGeometry(\n        /** @type {Point} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.CIRCLE: {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    const options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} SourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?CanvasRenderingContext2D} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n\n/**\n * @param {number} opacity Opacity (0..1).\n * @return {string} CSS opacity.\n */\nexport function cssOpacity(opacity) {\n  return opacity === 1 ? '' : String(Math.round(opacity * 100) / 100);\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (opt_canvasPool && opt_canvasPool.length) {\n    canvas = opt_canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n    canvas.style.all = 'unset';\n  }\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (let i = 0; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {PluggableMapOnSignature<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (\n          event.element\n        );\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer\n      ).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default|undefined} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} [map] Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/geom/Circle\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `opt_layout` and no\n   *     `opt_radius` are also accepted.\n   * @param {number} [opt_radius] Radius.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(center, opt_radius, opt_layout) {\n    super();\n    if (opt_layout !== undefined && opt_radius === undefined) {\n      this.setFlatCoordinates(opt_layout, center);\n    } else {\n      const radius = opt_radius ? opt_radius : 0;\n      this.setCenterAndRadius(center, radius, opt_layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.CIRCLE;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, opt_layout) {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  getCoordinates() {\n    return null;\n  }\n\n  setCoordinates(coordinates, opt_layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center)\n    );\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      translate(center, 0, center.length, stride, deltaX, deltaY, center)\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    const displacement = this.getDisplacement();\n    this.canvas_ = {};\n    this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      flatCoordinates =\n        /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n          geometry\n        ).getOrientedFlatCoordinates();\n      builderEndss = [];\n      const endss =\n        /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n          geometry\n        ).getEndss();\n      offset = 0;\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const myEnds = [];\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          offset,\n          endss[i],\n          stride,\n          myEnds\n        );\n        builderEndss.push(myEnds);\n      }\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEndss,\n        geometry,\n        renderer,\n        inflateMultiCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.POLYGON ||\n      type == GeometryType.MULTI_LINE_STRING\n    ) {\n      builderEnds = [];\n      flatCoordinates =\n        type == GeometryType.POLYGON\n          ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getOrientedFlatCoordinates()\n          : geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(\n        flatCoordinates,\n        0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds(),\n        stride,\n        builderEnds\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnds,\n        geometry,\n        renderer,\n        inflateCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.LINE_STRING ||\n      type == GeometryType.CIRCLE\n    ) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        false,\n        false\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n        inflateCoordinates,\n      ]);\n    } else if (type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (builderEnd > builderBegin) {\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n      }\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      builderEnd = this.coordinates.length;\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n      ]);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0] * this.imagePixelRatio_;\n    this.originY_ = origin[1] * this.imagePixelRatio_;\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return abstract();\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {cssOpacity} from '../../css.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === cssOpacity(opacity) &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextBaseline,\n  drawImageOrLabel,\n} from '../canvas.js';\nimport {\n  defaultTextAlign,\n  measureAndCacheTextWidth,\n  measureTextHeight,\n  measureTextWidths,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    contextInstructions.push('font', textState.font);\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    const x = align * renderWidth + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('strokeText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('fillText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[14]\n            );\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              const index = dd - d;\n              if (!declutterImageWithText[index]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[index] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[index];\n              delete declutterImageWithText[index];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (\n        textState.textBaseline\n      );\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n    this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n    this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScaleArray();\n    this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (!this.color_ || this.canvas_[pixelRatio]) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      imgSize,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (\n      this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION\n    ) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    const displacement = this.getDisplacement();\n    anchor[0] -= displacement[0];\n    anchor[1] += displacement[1];\n\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    if (opacity < 1) {\n      target = null;\n    }\n    super.useContainer(target, transform, opacity);\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.wrappedRenderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [opt_maxEntries] Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n      );\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {always, noModifierKeys, shiftKeyOnly} from '../events/condition.js';\nimport {\n  boundingExtent,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../extent.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/GeometryType.js\").default} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition.noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition.shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nconst Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle',\n};\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nexport class DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'drawabort'|'drawend'|'drawstart', DrawEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'drawabort'|'drawend'|'drawstart', Return>} DrawOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DrawOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {?}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * Pointer type of the last pointermove event\n     * @type {string}\n     * @private\n     */\n    this.pointerType_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/GeometryType.js\").default}\n     * @private\n     */\n    this.type_ = /** @type {import(\"../geom/GeometryType.js\").default} */ (\n      options.type\n    );\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints\n      ? options.minPoints\n      : this.mode_ === Mode.POLYGON\n      ? 3\n      : 2;\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ =\n      this.mode_ === Mode.CIRCLE\n        ? 2\n        : options.maxPoints\n        ? options.maxPoints\n        : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition\n      ? options.finishCondition\n      : TRUE;\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      const mode = this.mode_;\n      if (mode === Mode.CIRCLE) {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          const circle = geometry\n            ? /** @type {Circle} */ (geometry)\n            : new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center,\n            fromUserCoordinate(coordinates[coordinates.length - 1], projection)\n          );\n          circle.setCenterAndRadius(center, Math.sqrt(squaredLength));\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        if (mode === Mode.POINT) {\n          Constructor = Point;\n        } else if (mode === Mode.LINE_STRING) {\n          Constructor = LineString;\n        } else if (mode === Mode.POLYGON) {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          if (geometry) {\n            if (mode === Mode.POLYGON) {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates([\n                  coordinates[0].concat([coordinates[0][0]]),\n                ]);\n              } else {\n                geometry.setCoordinates([]);\n              }\n            } else {\n              geometry.setCoordinates(coordinates);\n            }\n          } else {\n            geometry = new Constructor(coordinates);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ =\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance\n      ? options.clickTolerance * options.clickTolerance\n      : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition\n        ? options.freehandCondition\n        : shiftKeyOnly;\n    }\n\n    this.addChangeListener(InteractionProperty.ACTIVE, this.updateState_);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.originalEvent.preventDefault();\n    }\n    this.freehand_ =\n      this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (\n      !this.freehand_ &&\n      this.lastDragTime_ &&\n      event.type === MapBrowserEventType.POINTERDRAG\n    ) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null\n    ) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN\n    ) {\n      pass = false;\n    } else if (move && this.getPointerCount() < 2) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.originalEvent.preventDefault();\n        }\n      } else if (\n        event.originalEvent.pointerType === 'mouse' ||\n        (event.type === MapBrowserEventType.POINTERDRAG &&\n          this.downTimeout_ === undefined)\n      ) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event.coordinate);\n      }\n      return true;\n    } else if (this.condition_(event)) {\n      this.lastDragTime_ = Date.now();\n      this.downTimeout_ = setTimeout(\n        function () {\n          this.handlePointerMove_(\n            new MapBrowserEvent(\n              MapBrowserEventType.POINTERMOVE,\n              event.map,\n              event.originalEvent,\n              false,\n              event.frameState\n            )\n          );\n        }.bind(this),\n        this.dragVertexDelay_\n      );\n      this.downPx_ = event.pixel;\n      return true;\n    } else {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.getPointerCount() === 0) {\n      if (this.downTimeout_) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n\n      this.handlePointerMove_(event);\n\n      if (this.shouldHandle_) {\n        const startingToDraw = !this.finishCoordinate_;\n        if (startingToDraw) {\n          this.startDrawing_(event.coordinate);\n        }\n        if (!startingToDraw && this.freehand_) {\n          this.finishDrawing();\n        } else if (\n          !this.freehand_ &&\n          (!startingToDraw || this.mode_ === Mode.POINT)\n        ) {\n          if (this.atFinish_(event.pixel)) {\n            if (this.finishCondition_(event)) {\n              this.finishDrawing();\n            }\n          } else {\n            this.addToDrawing_(event.coordinate);\n          }\n        }\n        pass = false;\n      } else if (this.freehand_) {\n        this.abortDrawing();\n      }\n    }\n\n    if (!pass && this.stopClick_) {\n      event.preventDefault();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @private\n   */\n  handlePointerMove_(event) {\n    this.pointerType_ = event.originalEvent.pointerType;\n    if (\n      this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))\n    ) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_\n        ? squaredDistance > this.squaredClickTolerance_\n        : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n\n    if (this.finishCoordinate_) {\n      this.modifyDrawing_(event.coordinate);\n    } else {\n      this.createOrUpdateSketchPoint_(event.coordinate.slice());\n    }\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(pixel) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      const mode = this.mode_;\n      if (mode === Mode.POINT) {\n        at = true;\n      } else if (mode === Mode.CIRCLE) {\n        at = this.sketchCoords_.length === 2;\n      } else if (mode === Mode.LINE_STRING) {\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n      } else if (mode === Mode.POLYGON) {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [\n          sketchCoords[0][0],\n          sketchCoords[0][sketchCoords[0].length - 2],\n        ];\n      }\n      if (potentiallyDone) {\n        const map = this.getMap();\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../coordinate\").Coordinate} coordinates Coordinate.\n   * @private\n   */\n  createOrUpdateSketchPoint_(coordinates) {\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @private\n   */\n  createOrUpdateCustomSketchLine_(geometry) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature();\n    }\n    const ring = geometry.getLinearRing(0);\n    let sketchLineGeom = this.sketchLine_.getGeometry();\n    if (!sketchLineGeom) {\n      sketchLineGeom = new LineString(\n        ring.getFlatCoordinates(),\n        ring.getLayout()\n      );\n      this.sketchLine_.setGeometry(sketchLineGeom);\n    } else {\n      sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(),\n        ring.getFlatCoordinates()\n      );\n      sketchLineGeom.changed();\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n   * @private\n   */\n  startDrawing_(start) {\n    const projection = this.getMap().getView().getProjection();\n    this.finishCoordinate_ = start;\n    if (this.mode_ === Mode.POINT) {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === Mode.POLYGON) {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(\n      this.sketchCoords_,\n      undefined,\n      projection\n    );\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @private\n   */\n  modifyDrawing_(coordinate) {\n    const map = this.getMap();\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = map.getView().getProjection();\n    let coordinates, last;\n    if (this.mode_ === Mode.POINT) {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\n      geometry,\n      projection\n    );\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    if (\n      geometry.getType() === GeometryType.POLYGON &&\n      this.mode_ !== Mode.POLYGON\n    ) {\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n    } else if (this.sketchLineCoords_) {\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (mode === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.createOrUpdateSketchPoint_(coordinate.slice());\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn. Does not do anything when\n   * drawing POINT or MULTI_POINT geometries.\n   * @api\n   */\n  removeLastPoint() {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      coordinates.splice(-2, 1);\n      if (coordinates.length >= 2) {\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n        const finishCoordinate = this.finishCoordinate_.slice();\n        coordinates[coordinates.length - 1] = finishCoordinate;\n        this.createOrUpdateSketchPoint_(finishCoordinate);\n      }\n      this.geometryFunction_(coordinates, geometry, projection);\n      if (geometry.getType() === GeometryType.POLYGON && this.sketchLine_) {\n        this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n      }\n    } else if (mode === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      coordinates.splice(-2, 1);\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      if (coordinates.length >= 2) {\n        const finishCoordinate = coordinates[coordinates.length - 2].slice();\n        coordinates[coordinates.length - 1] = finishCoordinate;\n        this.createOrUpdateSketchPoint_(finishCoordinate);\n      }\n      sketchLineGeom.setCoordinates(coordinates);\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n\n    if (coordinates.length === 1) {\n      this.abortDrawing();\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === Mode.LINE_STRING) {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === Mode.POLYGON) {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === GeometryType.MULTI_POINT) {\n      sketchFeature.setGeometry(\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n      sketchFeature.setGeometry(\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n      sketchFeature.setGeometry(\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)])\n      );\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon. If no geometry is being drawn, a new one will be created.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    const newDrawing = !this.sketchFeature_;\n    if (newDrawing) {\n      this.startDrawing_(coordinates[0]);\n    }\n    /** @type {LineCoordType} */\n    let sketchCoords;\n    if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n      sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n    } else if (mode === Mode.POLYGON) {\n      sketchCoords =\n        this.sketchCoords_ && this.sketchCoords_.length\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n          : [];\n    } else {\n      return;\n    }\n\n    if (newDrawing) {\n      sketchCoords.shift();\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    const ending = coordinates[coordinates.length - 1];\n    // Duplicate last coordinate for sketch drawing (cursor position)\n    this.addToDrawing_(ending);\n    this.modifyDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.sketchPoint_ = new Feature(new Point(last));\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number} [opt_sides] Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number} [opt_angle] Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function (coordinates, opt_geometry, projection) {\n    const center = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[0],\n      projection\n    );\n    const end = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1],\n      projection\n    );\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    const geometry = opt_geometry\n      ? /** @type {Polygon} */ (opt_geometry)\n      : fromCircle(new Circle(center), opt_sides);\n\n    let angle = opt_angle;\n    if (!opt_angle && opt_angle !== 0) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      angle = Math.atan2(y, x);\n    }\n    makeRegular(geometry, center, radius, angle);\n\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, opt_geometry, projection) {\n    const extent = boundingExtent(\n      /** @type {LineCoordType} */ ([\n        coordinates[0],\n        coordinates[coordinates.length - 1],\n      ]).map(function (coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      })\n    );\n    const boxCoordinates = [\n      [\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent),\n      ],\n    ];\n    let geometry = opt_geometry;\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Get the drawing mode.  The mode for multi-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/GeometryType.js\").default} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n      return Mode.POINT;\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n      return Mode.LINE_STRING;\n    case GeometryType.POLYGON:\n    case GeometryType.MULTI_POLYGON:\n      return Mode.POLYGON;\n    case GeometryType.CIRCLE:\n      return Mode.CIRCLE;\n    default:\n      throw new Error('Invalid type: ' + type);\n  }\n}\n\nexport default Draw;\n","/**\n * @module ol/interaction/Modify\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  altKeyOnly,\n  always,\n  primaryAction,\n  singleClick,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  buffer as bufferExtent,\n  createOrUpdateFromCoordinate as createExtent,\n} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  equals as coordinatesEqual,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {equals, includes} from '../array.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\nconst tempExtent = [0, 0, 0, 0];\nconst tempSegment = [];\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend',\n};\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth] Depth.\n * @property {import(\"../Feature\").FeatureLike} feature Feature.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} [index] Index.\n * @property {Array<Array<number>>} segment Segment.\n * @property {Array<SegmentData>} [featureSegments] FeatureSegments.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition.primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition.singleClick} with\n * {@link module:ol/events/condition.altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition.always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style used for the modification point or vertex. For linestrings and polygons, this will\n * be the affected vertex, for circles a point along the circle, and for points the actual\n * point. If not configured, the default edit style is used (see {@link module:ol/style}).\n * When using a style function, the point feature passed to the function will have a `features`\n * property - an array whose entries are the features that are being modified, and a `geometries`\n * property - an array whose entries are the geometries that are being modified. Both arrays are\n * in the same order. The `geometries` are only useful when modifying geometry collections, where\n * the geometry will be the particular geometry from the collection that is being modified.\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the `features` option.\n * @property {boolean|import(\"../layer/BaseVector\").default} [hitDetection] When configured, point\n * features will be considered for modification based on their visual appearance, instead of being within\n * the `pixelTolerance` from the pointer location. When a {@link module:ol/layer/BaseVector} is\n * provided, only the rendered representation of the features on that layer will be considered.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the `source` option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {boolean} [snapToPointer=!hitDetection] The vertex, point or segment being modified snaps to the\n * pointer coordinate when clicked within the `pixelTolerance`.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<import(\"../Feature\").FeatureLike>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserEvent.js\").default} MapBrowserEvent\n   * Associated {@link module:ol/MapBrowserEvent}.\n   */\n  constructor(type, features, MapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<import(\"../Feature\").FeatureLike>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = MapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'modifyend'|'modifystart', ModifyEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'modifyend'|'modifystart', Return>} ModifyOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * Cartesian distance from the pointer is used to determine the features that\n * will be modified. This means that geometries will only be considered for\n * modification when they are within the configured `pixelTolerane`. For point\n * geometries, the `hitDetection` option can be used to match their visual\n * appearance.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ModifyOnSignature<void>}\n     */\n    this.un;\n\n    /** @private */\n    this.boundHandleFeatureChange_ = this.handleFeatureChange_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition\n      ? options.deleteCondition\n      : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition\n      ? options.insertVertexCondition\n      : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {Collection<import(\"../Feature\").FeatureLike>}\n     * @private\n     */\n    this.featuresBeingModified_ = null;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n    };\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    /**\n     * @type {boolean|import(\"../layer/BaseVector\").default}\n     */\n    this.hitDetection_ = null;\n\n    let features;\n    if (options.features) {\n      features = options.features;\n    } else if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      this.source_.addEventListener(\n        VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_.bind(this)\n      );\n      this.source_.addEventListener(\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_.bind(this)\n      );\n    }\n    if (!features) {\n      throw new Error(\n        'The modify interaction requires features, a source or a layer'\n      );\n    }\n    if (options.hitDetection) {\n      this.hitDetection_ = options.hitDetection;\n    }\n\n    /**\n     * @type {Collection<import(\"../Feature.js\").FeatureLike>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    this.features_.addEventListener(\n      CollectionEventType.ADD,\n      this.handleFeatureAdd_.bind(this)\n    );\n    this.features_.addEventListener(\n      CollectionEventType.REMOVE,\n      this.handleFeatureRemove_.bind(this)\n    );\n\n    /**\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n    /**\n     * Delta (x, y in map units) between matched rtree vertex and pointer vertex.\n     * @type {Array<number>}\n     */\n    this.delta_ = [0, 0];\n\n    /**\n     * @private\n     */\n    this.snapToPointer_ =\n      options.snapToPointer === undefined\n        ? !this.hitDetection_\n        : options.snapToPointer;\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (writer) {\n        writer(feature, geometry);\n      }\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @param {Array<Array<SegmentData>>} segments The segments subject to modification.\n   * @private\n   */\n  willModifyFeatures_(evt, segments) {\n    if (!this.featuresBeingModified_) {\n      this.featuresBeingModified_ = new Collection();\n      const features = this.featuresBeingModified_.getArray();\n      for (let i = 0, ii = segments.length; i < ii; ++i) {\n        const segment = segments[i];\n        for (let s = 0, ss = segment.length; s < ss; ++s) {\n          const feature = segment[s].feature;\n          if (feature && features.indexOf(feature) === -1) {\n            this.featuresBeingModified_.push(feature);\n          }\n        }\n      }\n      if (this.featuresBeingModified_.getLength() === 0) {\n        this.featuresBeingModified_ = null;\n      } else {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYSTART,\n            this.featuresBeingModified_,\n            evt\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of canditate features is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    feature.removeEventListener(\n      EventType.CHANGE,\n      this.boundHandleFeatureChange_\n    );\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    /** @type {Array<SegmentData>} */\n    const nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      }\n    );\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      const nodeToRemove = nodesToRemove[i];\n      for (let j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n      rBush.remove(nodeToRemove);\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders the modification point or vertex to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(/** @type {Feature} */ (evt.element));\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = /** @type {Feature} */ (evt.element);\n    this.removeFeature_(feature);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n\n    /** @type {SegmentData} */\n    const segmentData = {\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates],\n    };\n\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates],\n      };\n\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment,\n      };\n\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n\n          /** @type {SegmentData} */\n          const segmentData = {\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment,\n          };\n\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n\n    /** @type {SegmentData} */\n    const centerSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    /** @type {SegmentData} */\n    const circumferenceSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = featureSegments;\n    circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n    let circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection && this.getMap()) {\n      const projection = this.getMap().getView().getProjection();\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n      circleGeometry = fromCircle(\n        /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n      ).transform(projection, userProjection);\n    }\n    this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const geometry = geometries[i];\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      writer(feature, geometry);\n    }\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {Array<import(\"../Feature\").FeatureLike>} features The features being modified.\n   * @param {Array<import(\"../geom/SimpleGeometry.js\").default>} geometries The geometries being modified.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates, features, geometries) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(coordinates);\n    }\n    vertexFeature.set('features', features);\n    vertexFeature.set('geometries', geometries);\n    return vertexFeature;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the geometry.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    let handled;\n    if (\n      !mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (\n        mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_\n      ) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return super.handleEvent(mapBrowserEvent) && !handled;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   */\n  handleDragEvent(evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt, this.dragSegments_);\n\n    const vertex = [\n      evt.coordinate[0] + this.delta_[0],\n      evt.coordinate[1] + this.delta_[1],\n    ];\n    const features = [];\n    const geometries = [];\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      const dragSegment = this.dragSegments_[i];\n      const segmentData = dragSegment[0];\n      const feature = segmentData.feature;\n      if (features.indexOf(feature) === -1) {\n        features.push(feature);\n      }\n      const geometry = segmentData.geometry;\n      if (geometries.indexOf(geometry) === -1) {\n        geometries.push(geometry);\n      }\n      const depth = segmentData.depth;\n      let coordinates;\n      const segment = segmentData.segment;\n      const index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case GeometryType.POINT:\n          coordinates = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case GeometryType.MULTI_POINT:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case GeometryType.LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.CIRCLE:\n          segment[0] = vertex;\n          segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else {\n            // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            const projection = evt.map.getView().getProjection();\n            let radius = coordinateDistance(\n              fromUserCoordinate(geometry.getCenter(), projection),\n              fromUserCoordinate(vertex, projection)\n            );\n            const userProjection = getUserProjection();\n            if (userProjection) {\n              const circleGeometry = geometry\n                .clone()\n                .transform(userProjection, projection);\n              circleGeometry.setRadius(radius);\n              radius = circleGeometry\n                .transform(projection, userProjection)\n                .getRadius();\n            }\n            geometry.setRadius(radius);\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex, features, geometries);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    const pixelCoordinate = evt.coordinate;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);\n    this.dragSegments_.length = 0;\n    this.featuresBeingModified_ = null;\n    const vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      const projection = evt.map.getView().getProjection();\n      const insertVertices = [];\n      const vertex = vertexFeature.getGeometry().getCoordinates();\n      const vertexExtent = boundingExtent([vertex]);\n      const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      const componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        const segmentDataMatch = segmentDataMatches[i];\n        const segment = segmentDataMatch.segment;\n        let uid = getUid(segmentDataMatch.geometry);\n        const depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n\n        if (\n          segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n          segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          const closestVertex = closestOnSegmentData(\n            pixelCoordinate,\n            segmentDataMatch,\n            projection\n          );\n          if (\n            coordinatesEqual(closestVertex, vertex) &&\n            !componentSegments[uid][0]\n          ) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]\n        ) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]\n        ) {\n          // prevent dragging closed linestrings by the connecting node\n          if (\n            (segmentDataMatch.geometry.getType() === GeometryType.LINE_STRING ||\n              segmentDataMatch.geometry.getType() ===\n                GeometryType.MULTI_LINE_STRING) &&\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0\n          ) {\n            continue;\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          getUid(segment) in this.vertexSegments_ &&\n          !componentSegments[uid][0] &&\n          !componentSegments[uid][1] &&\n          this.insertVertexCondition_(evt)\n        ) {\n          insertVertices.push(segmentDataMatch);\n        }\n      }\n\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt, [insertVertices]);\n      }\n\n      for (let j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_(insertVertices[j], vertex);\n      }\n    }\n    return !!this.vertexFeature_;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n      const segmentData = this.dragSegments_[i][0];\n      const geometry = segmentData.geometry;\n      if (geometry.getType() === GeometryType.CIRCLE) {\n        // Update a circle object in the R* bush:\n        const coordinates = geometry.getCenter();\n        const centerSegmentData = segmentData.featureSegments[0];\n        const circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = coordinates;\n        centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = coordinates;\n        circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\n        let circleGeometry = geometry;\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          const projection = evt.map.getView().getProjection();\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n          circleGeometry = fromCircle(circleGeometry).transform(\n            projection,\n            userProjection\n          );\n        }\n        this.rBush_.update(\n          circleGeometry.getExtent(),\n          circumferenceSegmentData\n        );\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.featuresBeingModified_) {\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYEND,\n          this.featuresBeingModified_,\n          evt\n        )\n      );\n      this.featuresBeingModified_ = null;\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_coordinate] The pixel Coordinate.\n   * @private\n   */\n  handlePointerAtPixel_(pixel, map, opt_coordinate) {\n    const pixelCoordinate = opt_coordinate || map.getCoordinateFromPixel(pixel);\n    const projection = map.getView().getProjection();\n    const sortByDistance = function (a, b) {\n      return (\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection)\n      );\n    };\n\n    /** @type {Array<SegmentData>|undefined} */\n    let nodes;\n    let hitPointGeometry;\n    if (this.hitDetection_) {\n      const layerFilter =\n        typeof this.hitDetection_ === 'object'\n          ? (layer) => layer === this.hitDetection_\n          : undefined;\n      map.forEachFeatureAtPixel(\n        pixel,\n        (feature, layer, geometry) => {\n          geometry =\n            geometry ||\n            /** @type {import(\"../geom/SimpleGeometry\").default} */ (\n              feature.getGeometry()\n            );\n          if (\n            geometry.getType() === GeometryType.POINT &&\n            includes(this.features_.getArray(), feature)\n          ) {\n            hitPointGeometry = geometry;\n            const coordinate = geometry.getFlatCoordinates().slice(0, 2);\n            nodes = [\n              {\n                feature,\n                geometry,\n                segment: [coordinate, coordinate],\n              },\n            ];\n          }\n          return true;\n        },\n        {layerFilter}\n      );\n    }\n    if (!nodes) {\n      const viewExtent = fromUserExtent(\n        createExtent(pixelCoordinate, tempExtent),\n        projection\n      );\n      const buffer = map.getView().getResolution() * this.pixelTolerance_;\n      const box = toUserExtent(\n        bufferExtent(viewExtent, buffer, tempExtent),\n        projection\n      );\n      nodes = this.rBush_.getInExtent(box);\n    }\n\n    if (nodes && nodes.length > 0) {\n      const node = nodes.sort(sortByDistance)[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (hitPointGeometry || dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        const vertexSegments = {};\n        vertexSegments[getUid(closestSegment)] = true;\n\n        if (!this.snapToPointer_) {\n          this.delta_[0] = vertex[0] - pixelCoordinate[0];\n          this.delta_[1] = vertex[1] - pixelCoordinate[1];\n        }\n        if (\n          node.geometry.getType() === GeometryType.CIRCLE &&\n          node.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n          const geometries = {};\n          geometries[getUid(node.geometry)] = true;\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if (\n              (coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1])) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0]))\n            ) {\n              const geometryUid = getUid(nodes[i].geometry);\n              if (!(geometryUid in geometries)) {\n                geometries[geometryUid] = true;\n                vertexSegments[getUid(segment)] = true;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = segmentData.index;\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n\n    /** @type {SegmentData} */\n    const newSegmentData = {\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    /** @type {SegmentData} */\n    const newSegmentData2 = {\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  }\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint() {\n    if (\n      this.lastPointerEvent_ &&\n      this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG\n    ) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt, this.dragSegments_);\n      const removed = this.removeVertex_();\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYEND,\n          this.featuresBeingModified_,\n          evt\n        )\n      );\n      this.featuresBeingModified_ = null;\n      return removed;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case GeometryType.MULTI_LINE_STRING:\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.LINE_STRING:\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.MULTI_POLYGON:\n          component = component[segmentData.depth[1]];\n        /* falls through */\n        case GeometryType.POLYGON:\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          /** @type {SegmentData} */\n          const newSegmentData = {\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments,\n          };\n\n          this.rBush_.insert(\n            boundingExtent(newSegmentData.segment),\n            newSegmentData\n          );\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n    }\n    return deleted;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(\n      geometry.getExtent(),\n      function (segmentDataMatch) {\n        if (\n          segmentDataMatch.geometry === geometry &&\n          (depth === undefined ||\n            segmentDataMatch.depth === undefined ||\n            equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index\n        ) {\n          segmentDataMatch.index += delta;\n        }\n      }\n    );\n  }\n}\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(\n  pointCoordinates,\n  segmentData,\n  projection\n) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n          circleGeometry.clone().transform(userProjection, projection)\n        );\n      }\n      const distanceToCenterSquared = squaredCoordinateDistance(\n        circleGeometry.getCenter(),\n        fromUserCoordinate(pointCoordinates, projection)\n      );\n      const distanceToCircumference =\n        Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return squaredDistanceToSegment(coordinate, tempSegment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (\n    geometry.getType() === GeometryType.CIRCLE &&\n    segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX\n  ) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n        circleGeometry.clone().transform(userProjection, projection)\n      );\n    }\n    return toUserCoordinate(\n      circleGeometry.getClosestPoint(\n        fromUserCoordinate(pointCoordinates, projection)\n      ),\n      projection\n    );\n  }\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return toUserCoordinate(\n    closestOnSegment(coordinate, tempSegment),\n    projection\n  );\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\nexport default Modify;\n","/**\n * @module ol/interaction/Snap\n */\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {\n  closestOnCircle,\n  closestOnSegment,\n  distance as coordinateDistance,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  getUserProjection,\n  toUserCoordinate,\n} from '../proj.js';\nimport {getUid} from '../util.js';\nimport {getValues} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped Snapped.\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex Vertex.\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel VertexPixel.\n */\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature Feature.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment Segment.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n * @return {import(\"../Feature.js\").default} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (\n    /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature\n  ) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt)\n      .feature;\n  } else if (\n    /** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element\n  ) {\n    return /** @type {import(\"../Feature.js\").default} */ (\n      /** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element\n    );\n  }\n}\n\nconst tempSegment = [];\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     const snap = new Snap({\n *       source: source\n *     });\n *\n *     map.addInteraction(snap);\n *\n * @api\n */\nclass Snap extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @type {import(\"../source/Vector.js\").default}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Segment RTree for each layer\n     * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @const\n     * @private\n     * @type {Object<string, function(import(\"../Feature.js\").default, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n    };\n  }\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean} [opt_listen] Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  addFeature(feature, opt_listen) {\n    const register = opt_listen !== undefined ? opt_listen : true;\n    const feature_uid = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (segmentWriter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(\n          createEmpty()\n        );\n        segmentWriter(feature, geometry);\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_,\n        this\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  forEachFeatureAdd_(feature) {\n    this.addFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  forEachFeatureRemove_(feature) {\n    this.removeFeature(feature);\n  }\n\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  getFeatures_() {\n    let features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(evt) {\n    const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n    if (result.snapped) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n    }\n    return super.handleEvent(evt);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    this.addFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    this.removeFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    const feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      const uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    const featuresToUpdate = getValues(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\n      this.pendingFeatures_ = {};\n    }\n    return false;\n  }\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean} [opt_unlisten] Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  removeFeature(feature, opt_unlisten) {\n    const unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n    const feature_uid = getUid(feature);\n    const extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      const rBush = this.rBush_;\n      const nodesToRemove = [];\n      rBush.forEachInExtent(extent, function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    const keys = this.featuresListenerKeys_;\n    const features = /** @type {Array<import(\"../Feature.js\").default>} */ (\n      this.getFeatures_()\n    );\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      features.forEach(this.forEachFeatureRemove_.bind(this));\n    }\n    super.setMap(map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(\n            this.features_,\n            CollectionEventType.ADD,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.features_,\n            CollectionEventType.REMOVE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(\n            this.source_,\n            VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.source_,\n            VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      }\n      features.forEach(this.forEachFeatureAdd_.bind(this));\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @return {Result} Snap result\n   */\n  snapTo(pixel, pixelCoordinate, map) {\n    const lowerLeft = map.getCoordinateFromPixel([\n      pixel[0] - this.pixelTolerance_,\n      pixel[1] + this.pixelTolerance_,\n    ]);\n    const upperRight = map.getCoordinateFromPixel([\n      pixel[0] + this.pixelTolerance_,\n      pixel[1] - this.pixelTolerance_,\n    ]);\n    const box = boundingExtent([lowerLeft, upperRight]);\n\n    let segments = this.rBush_.getInExtent(box);\n\n    // If snapping on vertices only, don't consider circles\n    if (this.vertex_ && !this.edge_) {\n      segments = segments.filter(function (segment) {\n        return segment.feature.getGeometry().getType() !== GeometryType.CIRCLE;\n      });\n    }\n\n    let snapped = false;\n    let vertex = null;\n    let vertexPixel = null;\n\n    if (segments.length === 0) {\n      return {\n        snapped: snapped,\n        vertex: vertex,\n        vertexPixel: vertexPixel,\n      };\n    }\n\n    const projection = map.getView().getProjection();\n    const projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\n\n    let closestSegmentData;\n    let minSquaredDistance = Infinity;\n    for (let i = 0; i < segments.length; ++i) {\n      const segmentData = segments[i];\n      tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n      tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n      const delta = squaredDistanceToSegment(projectedCoordinate, tempSegment);\n      if (delta < minSquaredDistance) {\n        closestSegmentData = segmentData;\n        minSquaredDistance = delta;\n      }\n    }\n    const closestSegment = closestSegmentData.segment;\n\n    if (this.vertex_ && !this.edge_) {\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n      const squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      if (dist <= this.pixelTolerance_) {\n        snapped = true;\n        vertex =\n          squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      const isCircle =\n        closestSegmentData.feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n      if (isCircle) {\n        let circleGeometry = closestSegmentData.feature.getGeometry();\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n        }\n        vertex = toUserCoordinate(\n          closestOnCircle(\n            projectedCoordinate,\n            /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n          ),\n          projection\n        );\n      } else {\n        tempSegment[0] = fromUserCoordinate(closestSegment[0], projection);\n        tempSegment[1] = fromUserCoordinate(closestSegment[1], projection);\n        vertex = toUserCoordinate(\n          closestOnSegment(projectedCoordinate, tempSegment),\n          projection\n        );\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          if (dist <= this.pixelTolerance_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n\n    return {\n      snapped: snapped,\n      vertex: vertex,\n      vertexPixel: vertexPixel,\n    };\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  updateFeature_(feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const projection = this.getMap().getView().getProjection();\n    let circleGeometry = geometry;\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n        circleGeometry.clone().transform(userProjection, projection)\n      );\n    }\n    const polygon = fromCircle(circleGeometry);\n    if (userProjection) {\n      polygon.transform(projection, userProjection);\n    }\n    const coordinates = polygon.getCoordinates()[0];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = {\n        feature: feature,\n        segment: segment,\n      };\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n      if (segmentWriter) {\n        segmentWriter(feature, geometries[i]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = {\n        feature: feature,\n        segment: segment,\n      };\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = {\n          feature: feature,\n          segment: segment,\n        };\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n      const segmentData = {\n        feature: feature,\n        segment: [coordinates, coordinates],\n      };\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n          const segmentData = {\n            feature: feature,\n            segment: segment,\n          };\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    const segmentData = {\n      feature: feature,\n      segment: [coordinates, coordinates],\n    };\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = {\n          feature: feature,\n          segment: segment,\n        };\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n}\n\nexport default Snap;\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","import GeoJSON from 'ol/format/GeoJSON';\nimport Map from 'ol/Map';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport View from 'ol/View';\nimport {Circle as CircleStyle, Fill, Stroke, Style} from 'ol/style';\nimport {Draw, Modify, Snap} from 'ol/interaction';\nimport {GeometryCollection, Point, Polygon} from 'ol/geom';\nimport {circular} from 'ol/geom/Polygon';\nimport {getDistance} from 'ol/sphere';\nimport {transform} from 'ol/proj';\n\nconst geodesicStyle = new Style({\n  geometry: function (feature) {\n    return feature.get('modifyGeometry') || feature.getGeometry();\n  },\n  fill: new Fill({\n    color: 'rgba(0, 255, 255, 0.2)',\n  }),\n  stroke: new Stroke({\n    color: '#ff3333',\n    width: 2,\n  }),\n  image: new CircleStyle({\n    radius: 7,\n    fill: new Fill({\n      color: 'rgba(255, 255, 0, 0)',\n    }),\n  }),\n});\n\nconst style = new Style({\n  fill: new Fill({\n    color: 'rgba(255, 255, 255, 0.2)',\n  }),\n  stroke: new Stroke({\n    color: '#33cc33',\n    width: 2,\n  }),\n  image: new CircleStyle({\n    radius: 7,\n    fill: new Fill({\n      color: '#aacc33',\n    }),\n  }),\n});\nconst source = new VectorSource({\n  format: new GeoJSON(),\n  url: './data/countries.json',\n  style: function (feature) {\n    const geometry = feature.getGeometry();\n    return geometry.getType() === 'GeometryCollection' ? geodesicStyle : style;\n  },\n});\n\nconst map = new Map({\n  target: 'map-container',\n  layers: [\n    new VectorLayer({\n      source: source,\n    }),\n  ],\n  view: new View({\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\n\nconst defaultStyle = new Modify({source: source})\n  .getOverlay()\n  .getStyleFunction();\n\nconst modify = new Modify({\n  source: source,\n  style: function (feature) {\n    feature.get('features').forEach(function (modifyFeature) {\n      const modifyGeometry = modifyFeature.get('modifyGeometry');\n      if (modifyGeometry) {\n        const modifyPoint = feature.getGeometry().getCoordinates();\n        const geometries = modifyFeature.getGeometry().getGeometries();\n        const polygon = geometries[0].getCoordinates()[0];\n        const center = geometries[1].getCoordinates();\n        const projection = map.getView().getProjection();\n        let first, last, radius;\n        if (modifyPoint[0] === center[0] && modifyPoint[1] === center[1]) {\n          // center is being modified\n          // get unchanged radius from diameter between polygon vertices\n          first = transform(polygon[0], projection, 'EPSG:4326');\n          last = transform(\n            polygon[(polygon.length - 1) / 2],\n            projection,\n            'EPSG:4326'\n          );\n          radius = getDistance(first, last) / 2;\n        } else {\n          // radius is being modified\n          first = transform(center, projection, 'EPSG:4326');\n          last = transform(modifyPoint, projection, 'EPSG:4326');\n          radius = getDistance(first, last);\n        }\n        // update the polygon using new center or radius\n        const circle = circular(\n          transform(center, projection, 'EPSG:4326'),\n          radius,\n          128\n        );\n        circle.transform('EPSG:4326', projection);\n        geometries[0].setCoordinates(circle.getCoordinates());\n        // save changes to be applied at the end of the interaction\n        modifyGeometry.setGeometries(geometries);\n      }\n    });\n    return defaultStyle(feature);\n  },\n});\n\nmodify.on('modifystart', function (event) {\n  event.features.forEach(function (feature) {\n    const geometry = feature.getGeometry();\n    if (geometry.getType() === 'GeometryCollection') {\n      feature.set('modifyGeometry', geometry.clone(), true);\n    }\n  });\n});\n\nmodify.on('modifyend', function (event) {\n  event.features.forEach(function (feature) {\n    const modifyGeometry = feature.get('modifyGeometry');\n    if (modifyGeometry) {\n      feature.setGeometry(modifyGeometry);\n      feature.unset('modifyGeometry', true);\n    }\n  });\n});\n\nmap.addInteraction(modify);\n\nlet draw, snap; // global so we can remove them later\nconst typeSelect = document.getElementById('type');\n\nfunction addInteractions() {\n  let value = typeSelect.value;\n  let geometryFunction;\n  if (value === 'Geodesic') {\n    value = 'Circle';\n    geometryFunction = function (coordinates, geometry, projection) {\n      if (!geometry) {\n        geometry = new GeometryCollection([\n          new Polygon([]),\n          new Point(coordinates[0]),\n        ]);\n      }\n      const geometries = geometry.getGeometries();\n      const center = transform(coordinates[0], projection, 'EPSG:4326');\n      const last = transform(coordinates[1], projection, 'EPSG:4326');\n      const radius = getDistance(center, last);\n      const circle = circular(center, radius, 128);\n      circle.transform('EPSG:4326', projection);\n      geometries[0].setCoordinates(circle.getCoordinates());\n      geometry.setGeometries(geometries);\n      return geometry;\n    };\n  }\n  draw = new Draw({\n    source: source,\n    type: value,\n    geometryFunction: geometryFunction,\n  });\n  map.addInteraction(draw);\n  snap = new Snap({source: source});\n  map.addInteraction(snap);\n}\n\n/**\n * Handle change event.\n */\ntypeSelect.onchange = function () {\n  map.removeInteraction(draw);\n  map.removeInteraction(snap);\n  addInteractions();\n};\n\naddInteractions();\nvar numPoints = 24;\n             for (var i = 0; i < numPoints; ++i) {\n               var angle = rotation + i * 2 * Math.PI / numPoints;\n               var fraction = i % 50 === 0 ? 0 : 2;\n               var offsetX = radius * fraction * Math.cos(angle);\n               var offsetY = radius * fraction * Math.sin(angle);\n               newCoordinates.push([center[0] + offsetX, center[1] + offsetY]);}"],"names":["$aeedce20e9577100$export$2e2bcd8739ae039","BaseEvent","type","this","propagationStopped","defaultPrevented","target","prototype","preventDefault","stopPropagation","$e881b5dca21eb5d4$export$2e2bcd8739ae039","PROPERTYCHANGE","$3273ed08087da3da$export$2e2bcd8739ae039","Disposable","disposed","dispose","disposeInternal","$b998d41b678ed5d1$export$2e0ae67339d5f1ac","haystack","needle","opt_comparator","mid","cmp","comparator","$b998d41b678ed5d1$export$4e734a3b32fb971b","low","high","length","found","a","b","$b998d41b678ed5d1$export$8a3786cc03fdb777","arr","direction","n","i","$b998d41b678ed5d1$export$292cfa960964f0e0","begin","end","tmp","$b998d41b678ed5d1$export$8b58be045bf06082","data","extension","Array","isArray","$b998d41b678ed5d1$export$e9bab7fafb253603","arr1","arr2","len1","$013a1733c226ec50$export$22e23a2304399231","$013a1733c226ec50$export$8f11cee4bdc7e668","$013a1733c226ec50$export$1cd1943b3a73bbe8","$beaefe87199bb537$export$e6e34fd1f2686227","Object","assign","var_sources","TypeError","output","ii","arguments","source","key","hasOwnProperty","$beaefe87199bb537$export$42ffd38884aecdac","object","property","$beaefe87199bb537$export$a5c4301012ad6f07","values","push","$beaefe87199bb537$export$dd1bc94b04021eeb","$08c28d22c0cb5a39$export$2e2bcd8739ae039","_super","Target","opt_target","_this","call","eventTarget_","pendingRemovals_","dispatching_","listeners_","$08c28d22c0cb5a39$var$__extends","addEventListener","listener","listeners","listenersForType","indexOf","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","opt_type","keys","index","splice","$294047c5e65f31a3$export$2e2bcd8739ae039","CHANGE","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","$d5bf8abd656a3cdc$export$63174c828edd6ff8","opt_this","opt_once","bind","originalListener_1","apply","eventsKey","$d5bf8abd656a3cdc$export$8d2a95bc11b44725","$d5bf8abd656a3cdc$export$b0a21c8b3c1c921","$1f093ab5083c8a1f$var$Observable","Observable","on","onInternal","once","onceInternal","un","unInternal","revision_","$1f093ab5083c8a1f$var$__extends","changed","getRevision","len","ol_key","$1f093ab5083c8a1f$export$b7ef3f8527533384","$08c28d22c0cb5a39$exports","default","$1f093ab5083c8a1f$export$2e2bcd8739ae039","$6c5e11070e371322$export$817eb92a8194bab0","Error","$6c5e11070e371322$var$uidCounter_","$6c5e11070e371322$export$5e82334337e0f204","obj","ol_uid","String","$b68b3d6e32e3074a$export$cf395d7c4a2d5a17","ObjectEvent","oldValue","$b68b3d6e32e3074a$var$__extends","$b68b3d6e32e3074a$export$2e2bcd8739ae039","BaseObject","opt_values","values_","setProperties","get","value","getKeys","getProperties","hasProperties","notify","eventType","addChangeListener","removeChangeListener","set","opt_silent","applyProperties","unset","$1f093ab5083c8a1f$exports","$40658b5e833b516b$export$2e2bcd8739ae039","AssertionError","code","message","split","name","$40658b5e833b516b$var$__extends","$35d5ec884318008e$export$a7a9523472993e97","assertion","errorCode","$40658b5e833b516b$exports","$9fd014ab6df63665$export$bb06ddfd5d66e02e","styles_1","getZIndex","$9fd014ab6df63665$export$2e2bcd8739ae039","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","$9fd014ab6df63665$var$__extends","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","opt_style","setId","id","$b68b3d6e32e3074a$exports","$03edbd434a9e6608$var$Units","RADIANS","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$03edbd434a9e6608$export$1482081eec883108","Math","PI","$e22e7611e69f42a9$var$transformStringDiv","$03edbd434a9e6608$export$2e2bcd8739ae039","$67c66761d21428d0$var$ua","navigator","userAgent","toLowerCase","$67c66761d21428d0$export$8442bdfd18b7b8a6","$67c66761d21428d0$export$39dfd62a25e0fe93","$67c66761d21428d0$export$76c0a3b101d93136","$67c66761d21428d0$export$6b83a0446fc26f94","devicePixelRatio","$67c66761d21428d0$export$98fcef3dc9973292","WorkerGlobalScope","OffscreenCanvas","self","$67c66761d21428d0$export$716f8695eedb9bad","Image","decode","$67c66761d21428d0$export$f751ce96c6c4e4fc","passive","options","defineProperty","window","error","$e22e7611e69f42a9$export$adaa4cf7ef1b65be","transform","c","d","e","f","$e22e7611e69f42a9$export$5635d7ef4b8fee1c","coordinate","x","y","$e22e7611e69f42a9$export$3e4e33ea14aeb531","$e22e7611e69f42a9$export$f672e0b6f7222cd7","dx1","dy1","sx","sy","angle","dx2","dy2","sin","cos","$e22e7611e69f42a9$export$bd70ea2a93c0fa4","mat","det","$e22e7611e69f42a9$export$f84e8e69fd4488a5","transformString","join","node","document","createElement","$dab4245bc22b806c$export$2e2bcd8739ae039","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","$6da4c8ed3074c92b$export$8aceca7c77505534","coordinates","extent","$6da4c8ed3074c92b$export$fe201bb3bbe031e9","$6da4c8ed3074c92b$export$1f820e3920fa5715","$6da4c8ed3074c92b$export$ab1029bcae9ddb4a","opt_extent","$6da4c8ed3074c92b$export$9cd59f9826255e47","slice","$6da4c8ed3074c92b$export$cbe64c389534206f","dx","dy","$6da4c8ed3074c92b$export$ac68c24d37ca240f","$6da4c8ed3074c92b$export$805bdfd6d6690e97","$6da4c8ed3074c92b$export$be866b1e0809b17e","extent1","extent2","$6da4c8ed3074c92b$export$f97905ead28c61a8","minX","minY","maxX","maxY","relationship","Infinity","$6da4c8ed3074c92b$export$958e3e1a02eac4b6","$6da4c8ed3074c92b$export$3e2152b047719fa1","$6da4c8ed3074c92b$export$4838bf78d04a9440","$6da4c8ed3074c92b$export$be0ab0bf96ca59ca","flatCoordinates","offset","stride","$6da4c8ed3074c92b$export$30570204156ffd18","$6da4c8ed3074c92b$export$e9bab7fafb253603","$6da4c8ed3074c92b$export$f1dab130b92b85a9","min","max","$6da4c8ed3074c92b$export$f9ed8a3d123a08e2","callback","val","$6da4c8ed3074c92b$export$8d09f5e2e1bf560d","$6da4c8ed3074c92b$export$e77c1cf70445e168","$6da4c8ed3074c92b$export$b84fa077c8b05295","$6da4c8ed3074c92b$export$cb1538b07e6964ff","$6da4c8ed3074c92b$export$c91255cadecfe081","$6da4c8ed3074c92b$export$13ba650faf8308","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$6da4c8ed3074c92b$export$c08559766941f856","$6da4c8ed3074c92b$export$72209efa88586d42","intersection","$6da4c8ed3074c92b$export$7b0a31e10bbff018","$6da4c8ed3074c92b$export$3c49c185de0c2bfc","$6da4c8ed3074c92b$export$dd1bc94b04021eeb","$6da4c8ed3074c92b$export$6a4fe494c558c238","$6da4c8ed3074c92b$export$a6a5a7a461419425","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$6da4c8ed3074c92b$export$9f9dcb98c894b623","transformFn","opt_stops","width","height","xs","ys","l","$6da4c8ed3074c92b$var$_boundingExtentXYs","$6da4c8ed3074c92b$export$39a9ce3624977b84","projection","projectionExtent","getExtent","canWrapX","worldWidth","floor","$6dc418afeec7068a$export$2e2bcd8739ae039","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$6b000a049d919fe5$export$7d15b64cf5a3a4c4","$6b000a049d919fe5$export$2e2fd1ad24e4d350","cosh","exp","log2","$6b000a049d919fe5$export$251bb0a9cef172e6","t","$6b000a049d919fe5$export$88e6ebb4fe54f538","$6b000a049d919fe5$export$56cb859c01fa134d","angleInRadians","$6b000a049d919fe5$export$cba01ba138429a1d","angleInDegrees","$6b000a049d919fe5$export$ba467bec01d66def","r","$6b000a049d919fe5$export$3a89f8d6f6bf6c9f","$84ad988f04807ab1$export$f3928063e5e96d35","$84ad988f04807ab1$export$21e6da8a7375dfe8","$84ad988f04807ab1$export$ae9d6ed80df710e5","$84ad988f04807ab1$export$d26945d1ad52feeb","log","tan","$84ad988f04807ab1$var$EPSG3857Projection","EPSG3857Projection","point","$84ad988f04807ab1$var$__extends","$84ad988f04807ab1$export$b508d7ad9a891c1b","$84ad988f04807ab1$export$1ff8bb36c0983070","input","opt_output","opt_dimension","dimension","$84ad988f04807ab1$export$8c71322ec28ed6b4","atan","$b58ae362632b32c5$export$21e6da8a7375dfe8","$b58ae362632b32c5$export$1482081eec883108","$b58ae362632b32c5$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$b58ae362632b32c5$var$__extends","$b58ae362632b32c5$export$b508d7ad9a891c1b","$f5ec5c943d804ecb$var$cache","$f5ec5c943d804ecb$export$e16d8520af44a096","$11b5dd198626e1de$var$transforms","$11b5dd198626e1de$export$e16d8520af44a096","destination","sourceCode","destinationCode","$11b5dd198626e1de$export$3988ae62b71be9a3","$419865bd7211e6e7$export$2e2bcd8739ae039","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","$fb75384508533d8f$export$79376507b09a66f","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","$fb75384508533d8f$export$cc800923e997bb8","distance","bearing","lon1","dByR","lat","asin","$1bd0a226f9a16141$export$cbe80a3fcd2b99b7","circle","getRadius","getCenter","$1bd0a226f9a16141$export$18cdd31d17f97131","segment","along","$1bd0a226f9a16141$export$e9bab7fafb253603","coordinate1","coordinate2","equals","$1bd0a226f9a16141$export$bb628a54ab399bc9","cosAngle","sinAngle","$1bd0a226f9a16141$export$88e6ebb4fe54f538","coord1","coord2","$1bd0a226f9a16141$export$9f17032d917177de","$1bd0a226f9a16141$export$6985570514055196","$1bd0a226f9a16141$export$39a9ce3624977b84","worldsAway","$1bd0a226f9a16141$export$24e2b27d1ff0c1d5","opt_sourceExtentWidth","sourceExtentWidth","$9c4744460e43e41b$export$dd516654c5f598fb","$9c4744460e43e41b$export$83e8ab53904f8022","$9c4744460e43e41b$export$59ae956cd3e343f7","$9c4744460e43e41b$export$3988ae62b71be9a3","projectionLike","replace","$9c4744460e43e41b$export$eeb8392580a05a37","projections","forEach","$9c4744460e43e41b$export$638ad73f7aafb913","$9c4744460e43e41b$export$549167224996a0fb","defaultCode","$9c4744460e43e41b$export$fe091d73a555748b","projection1","projection2","equalUnits","$9c4744460e43e41b$export$e3c4995a701c26a3","sourceProjection","destinationProjection","transformFunc","$9c4744460e43e41b$export$fce0c6cfca85ed96","$9c4744460e43e41b$export$51186ad6e864892a","$9c4744460e43e41b$export$751c68e0e0efff79","projections2","forwardTransform","inverseTransform","$9c4744460e43e41b$var$userProjection","$9c4744460e43e41b$export$3973b77d5f6f2790","$9c4744460e43e41b$export$698f563af1ba02a5","$9c4744460e43e41b$export$d4b8ec0b96db1ee2","destProjection","$9c4744460e43e41b$export$96bfd09e2cffb006","$9c4744460e43e41b$export$494be3a3a25689ca","$9c4744460e43e41b$export$b56bb8ad8b3a00e9","sourceUnits","userUnits","$14c6e714516e527b$export$b92b2dedcfff79de","opt_dest","dest","j","$14c6e714516e527b$export$bb628a54ab399bc9","anchor","anchorX","anchorY","deltaX","deltaY","k","$14c6e714516e527b$export$dcdf75081b88279d","$14c6e714516e527b$export$d73ee8ef04f5226a","$84ad988f04807ab1$exports","PROJECTIONS","$b58ae362632b32c5$exports","fromEPSG4326","toEPSG4326","$50db89a00eb954f6$var$tmpTransform","$50db89a00eb954f6$export$2e2bcd8739ae039","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","applyTransform","nextArgs","$50db89a00eb954f6$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","rotate","scale","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$0e4f3959219eede5$var$cloneGeometries","geometries","clonedGeometries","$0e4f3959219eede5$export$2e2bcd8739ae039","GeometryCollection","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","$0e4f3959219eede5$var$__extends","unlistenGeometriesChange_","geometryCollection","setGeometries","getGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","concat","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","isEmpty","$50db89a00eb954f6$exports","$ec084d0ff9c13a22$export$2e2bcd8739ae039","FeatureFormat","dataProjection","defaultFeatureProjection","supportedMediaTypes","getReadOptions","opt_options","readProjection","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","feature","writeFeatures","features","writeGeometry","$ec084d0ff9c13a22$export$7beeea566b560d4","write","transformed","decimals","power_1","pow","round","$fdcc6dd70a9488b9$export$2e2bcd8739ae039","ARRAY_BUFFER","JSON","TEXT","XML","$2f9f6f6b6e1ba437$var$getObject","parse","$2f9f6f6b6e1ba437$export$2e2bcd8739ae039","JSONFeature","$2f9f6f6b6e1ba437$var$__extends","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","$42282ac5c8474df1$export$2e2bcd8739ae039","XY","XYZ","XYM","XYZM","$c76e993e57efc8c4$export$6af0c1b4a8549a43","layout","$c76e993e57efc8c4$export$a3767472617c7861","simpleGeometry","getFlatCoordinates","getStride","$c76e993e57efc8c4$export$2e2bcd8739ae039","SimpleGeometry","$c76e993e57efc8c4$var$__extends","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","$c76e993e57efc8c4$var$getLayoutForStride","$bf5604c1b8258b71$var$assignClosest","offset1","offset2","$bf5604c1b8258b71$export$bc2eb611ddf80103","squaredDelta","$bf5604c1b8258b71$export$fbf31c8f2668ed5a","ends","$bf5604c1b8258b71$export$37c18e6e7d50501a","endss","$bf5604c1b8258b71$export$4adc8e5135fb44c","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$bf5604c1b8258b71$export$5a48a0eefcf14992","$bf5604c1b8258b71$export$60e067685eb8f9c4","$6b086aa46281540d$export$60815ead40ec79ab","$6b086aa46281540d$export$5c4daf67e03c190f","$6b086aa46281540d$export$47c3746a74384d45","coordinatess","opt_ends","jj","$6b086aa46281540d$export$f9f2bb59da4accd3","coordinatesss","opt_endss","$8780aae6970f5f65$export$ef693d1572e64fb8","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","pop","first","maxSquaredDistance","squaredDistance_1","$8780aae6970f5f65$export$cedb9900c0b225c2","simplifiedEnds","$8780aae6970f5f65$export$51a0620f7a28532b","$8780aae6970f5f65$export$b84e8d2c4920a0c6","$8780aae6970f5f65$export$60a9904b67f8d51b","$8780aae6970f5f65$export$b9acf67ef05cd17c","simplifiedEndss","$3e64078bffae1cbd$export$4b80e395e36b5a56","ret","$5454470599558ddd$export$9c0934e4e9c3f61e","opt_coordinates","$5454470599558ddd$export$cbb9596fc0f40db2","opt_coordinatess","$5454470599558ddd$export$915c7058aeb4dfeb","opt_coordinatesss","$43ed5485a1d0c509$export$687ff82efd78795b","fraction","o","length_1","cumulativeLengths","$43ed5485a1d0c509$export$8f44c3c220ef6f09","m","extrapolate","lo","hi","m0","$43ed5485a1d0c509$export$6a3300857e9ef453","interpolate","$239aa88e7a573859$export$cedabedc7ac0e138","$239aa88e7a573859$export$949a7a3a4b6f34fa","wn","$239aa88e7a573859$export$ae868c0f6acc3355","$239aa88e7a573859$export$c760d9d16cf92043","$acee589e5b390c5c$export$40d8d71841a3d779","coordinatesExtent","point1","point2","$acee589e5b390c5c$export$fdb1d8e850bf7937","$acee589e5b390c5c$export$76dcd8f8f83b6ddb","$acee589e5b390c5c$export$830a0dafbb2ef1c5","$acee589e5b390c5c$export$77b72fa3792f5bf0","$bf04349d827c1d16$export$153f8c6b4d8caebc","$292e4002746c8223$export$2e2bcd8739ae039","LineString","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","$292e4002746c8223$var$__extends","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getLength","getFlatMidpoint","$c76e993e57efc8c4$exports","$b4c0e2e13beea46e$export$2e2bcd8739ae039","MultiLineString","ends_","lineStrings","$b4c0e2e13beea46e$var$__extends","appendLineString","multiLineString","opt_interpolate","getEnds","getLineString","$292e4002746c8223$exports","getLineStrings","getFlatMidpoints","midpoints","$6eced4c969949f6b$export$2e2bcd8739ae039","Point","$6eced4c969949f6b$var$__extends","$e6080c63a9451eda$export$2e2bcd8739ae039","MultiPoint","$e6080c63a9451eda$var$__extends","appendPoint","multiPoint","getPoint","$6eced4c969949f6b$exports","getPoints","points","$01ff26a2f986a1d0$export$3c5e1905f889266e","twiceArea","$01ff26a2f986a1d0$export$7a8ee541dfdf2ed5","area","$01ff26a2f986a1d0$export$78e139679ca7205","$548636579b4087f2$export$2e2bcd8739ae039","LinearRing","$548636579b4087f2$var$__extends","getArea","$2166f19777f69377$export$50e3b25928a5e892","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","abs","$2166f19777f69377$export$11463803eda8a372","interiorPoints","$155dc783a4ec227e$export$741858880c96b18c","$7892dc06ffd23218$export$318f2842ed17e094","edge","$7892dc06ffd23218$export$f27cd06e85f4ba28","opt_right","right","isClockwise","$7892dc06ffd23218$export$a1d138f4bd85f4b4","$7892dc06ffd23218$export$b71b604ddfc778c7","$7892dc06ffd23218$export$ea9ed55fc2a85010","$40aa8d43bbe572bf$var$Polygon","Polygon","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$40aa8d43bbe572bf$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","$548636579b4087f2$exports","getLinearRings","linearRings","$40aa8d43bbe572bf$export$2e2bcd8739ae039","$40aa8d43bbe572bf$export$f99d756c6d81ae3f","opt_n","opt_sphereRadius","$40aa8d43bbe572bf$export$c16b671815801c75","$40aa8d43bbe572bf$export$2451009d645fb8c2","opt_sides","opt_angle","sides","arrayLength","$40aa8d43bbe572bf$export$87d6a1539a56e47f","startAngle","$9825fadaf3b68c4e$export$78e139679ca7205","$f73f35eb6af8b987$export$2e2bcd8739ae039","MultiPolygon","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","$f73f35eb6af8b987$var$__extends","appendPolygon","newEndss","multiPolygon","getEndss","getFlatInteriorPoints","getInteriorPoints","$e6080c63a9451eda$exports","getPolygon","prevEnds","$40aa8d43bbe572bf$exports","getPolygons","lastEnds","$f602cef51a2e6950$var$readGeometry","$f602cef51a2e6950$var$readPointGeometry","$f602cef51a2e6950$var$readLineStringGeometry","$f602cef51a2e6950$var$readPolygonGeometry","$f602cef51a2e6950$var$readMultiPointGeometry","$b4c0e2e13beea46e$exports","$f602cef51a2e6950$var$readMultiLineStringGeometry","$f73f35eb6af8b987$exports","$f602cef51a2e6950$var$readMultiPolygonGeometry","map","$0e4f3959219eede5$exports","$f602cef51a2e6950$var$readGeometryCollectionGeometry","$f602cef51a2e6950$var$writeGeometry","geoJSON","$f602cef51a2e6950$var$writePointGeometry","$f602cef51a2e6950$var$writeLineStringGeometry","rightHanded","$f602cef51a2e6950$var$writePolygonGeometry","$f602cef51a2e6950$var$writeMultiPointGeometry","$f602cef51a2e6950$var$writeMultiLineStringGeometry","$f602cef51a2e6950$var$writeMultiPolygonGeometry","$f602cef51a2e6950$var$writeGeometryCollectionGeometry","$f602cef51a2e6950$export$2e2bcd8739ae039","GeoJSON","geometryName","extractGeometryName_","extractGeometryName","$f602cef51a2e6950$var$__extends","geoJSONFeature","$9fd014ab6df63665$exports","geoJSONFeatures","crs","objects","$2f9f6f6b6e1ba437$exports","$322346e1ff7894ca$var$HEX_COLOR_RE_","$322346e1ff7894ca$var$NAMED_COLOR_RE_","$322346e1ff7894ca$export$590567be997858b6","color","$322346e1ff7894ca$export$f84e8e69fd4488a5","$322346e1ff7894ca$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$322346e1ff7894ca$export$3004f64547af360e","s","g","exec","hasAlpha","parseInt","substr","$322346e1ff7894ca$export$a3295358bff77e","Number","$322346e1ff7894ca$var$fromStringInternal_","$322346e1ff7894ca$export$75093a47a9fa838d","$f351daabfe6e2d22$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","src","crossOrigin","$f351daabfe6e2d22$var$getKey","setSize","maxCacheSize","$f351daabfe6e2d22$export$747ccdf771a87ab8","$f6d1853b3fcae320$export$2e2bcd8739ae039","OPACITY","VISIBLE","EXTENT","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","$57c5f0299cb9b82f$export$2e2bcd8739ae039","BaseLayer","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$57c5f0299cb9b82f$var$__extends","getClassName","getLayerState","opt_managed","state","layer","managed","getOpacity","sourceState","getSourceState","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$f5e92a4d985a2824$export$2e2bcd8739ae039","PRERENDER","POSTRENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","$98f5bfe3c4864f05$export$2e2bcd8739ae039","UNDEFINED","LOADING","READY","$534f30fce11effcd$export$acb1e9cb9ce4ca56","layerState","viewState","zoom","$534f30fce11effcd$export$2e2bcd8739ae039","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","setMap","handleSourcePropertyChange_","setSource","$534f30fce11effcd$var$__extends","array","states","getSource","getState","handleSourceChange_","getFeatures","pixel","Promise","resolve","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$57c5f0299cb9b82f$exports","$b370ab32454a96fd$var$expireIconCache","$b370ab32454a96fd$export$2e2bcd8739ae039","MapRenderer","map_","$b370ab32454a96fd$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","$534f30fce11effcd$exports","inView","getWrapX","callback_1","order","distanceSq","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$b80dddceb0c42ad4$export$2e2bcd8739ae039","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$b80dddceb0c42ad4$var$__extends","$ce07df6d5d4656f1$var$fontRegEx","RegExp","$ce07df6d5d4656f1$var$fontRegExMatchIndex","$ce07df6d5d4656f1$export$5abde8a6aec4a131","fontSpec","match","lineHeight","weight","variant","families","family","$ce07df6d5d4656f1$export$52ec625a6a53b6a6","$075f937d7366f1a2$export$9e05d10eae75c464","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","all","getContext","$075f937d7366f1a2$export$5542201de9311ab2","newNode","oldNode","parent","parentNode","replaceChild","$075f937d7366f1a2$export$1d0aa160432dfea5","$075f937d7366f1a2$export$1e1c9bf5a4ffe0d1","lastChild","$075f937d7366f1a2$export$caeacfe04f52533a","children","oldChildren","childNodes","oldChild","newChild","insertBefore","$d4aabc5c971073f1$export$e21b4112fdc612fc","$d4aabc5c971073f1$export$40a9eeef55665a40","$d4aabc5c971073f1$export$1d36981fcadac93b","console","warn","$d4aabc5c971073f1$var$measureFont","measureElement","$d4aabc5c971073f1$var$measureContext","$d4aabc5c971073f1$export$7fdcec604f0b1fa7","$d4aabc5c971073f1$export$a534074a28fa87ff","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$d4aabc5c971073f1$export$4ea92329b673abd1","check","done","fonts","font","clearInterval","setInterval","$d4aabc5c971073f1$export$4feaf6852ff92513","metrics","$d4aabc5c971073f1$var$measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","position","display","left","offsetHeight","measureText","$d4aabc5c971073f1$export$915c7ba51467308f","$d4aabc5c971073f1$export$a539decdd6096c57","lines","widths","numLines","currentWidth","$d4aabc5c971073f1$export$3cb6f3a6e49cc0ee","labelOrImage","originX","originY","w","h","save","globalAlpha","setTransform","contextInstructions","label","$d4aabc5c971073f1$var$executeLabelInstructions","drawImage","restore","$fa78c97693b12120$export$2e2bcd8739ae039","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","container","getViewport","firstChild","children_","renderedVisible_","$fa78c97693b12120$var$__extends","event_1","$b80dddceb0c42ad4$exports","declutterLayers","previousElement","layerIndex","element","renderDeclutter","getDataAtPixel","$b370ab32454a96fd$exports","$161dd067fe2d672c$export$2e2bcd8739ae039","ADD","REMOVE","$931ffc4e747c14db$var$Property","$931ffc4e747c14db$export$a87ae6eb2761ec6d","CollectionEvent","opt_element","opt_index","$931ffc4e747c14db$var$__extends","$931ffc4e747c14db$export$2e2bcd8739ae039","Collection","unique_","unique","array_","assertUnique_","updateLength_","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$0b703156bb914e6f$var$Property","$0b703156bb914e6f$export$2e2bcd8739ae039","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$931ffc4e747c14db$exports","setLayers","$0b703156bb914e6f$var$__extends","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","defaultZIndex","$3a171922c3a0c5ed$export$2e2bcd8739ae039","MapEvent","$3a171922c3a0c5ed$var$__extends","$a1b91f073c6a6c43$export$2e2bcd8739ae039","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$a1b91f073c6a6c43$var$__extends","getEventPixel","getCoordinateFromPixel","$3a171922c3a0c5ed$exports","$150f412a4a7fa263$export$2e2bcd8739ae039","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$d564567e31203d44$export$2e2bcd8739ae039","$6085d006f9d0efe2$export$2e2bcd8739ae039","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$6085d006f9d0efe2$var$__extends","emulateClick_","pointerEvent","newEvent","$a1b91f073c6a6c43$exports","clearTimeout","setTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","$e4ad75f913b6f7ff$export$2e2bcd8739ae039","MOVESTART","MOVEEND","$07fa325567004bb7$export$2e2bcd8739ae039","LAYERGROUP","SIZE","TARGET","VIEW","$716c6804ea170b71$export$2e2bcd8739ae039","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$b8291d9739c3c64e$export$2e2bcd8739ae039","IDLE","LOADED","EMPTY","$4c51fd53052a6bbc$export$2e2bcd8739ae039","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$4c51fd53052a6bbc$var$__extends","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$4c51fd53052a6bbc$export$f08ad5eceeff5d45","tileSourceKey","tileCenter","tileResolution","wantedTiles","$7d362782b4ccb93d$export$2e2bcd8739ae039","ANIMATING","INTERACTING","$d35baefbe89be4c5$export$2e2bcd8739ae039","CENTER","RESOLUTION","ROTATION","$b21a6e049949bb31$export$c2f0af2c946f6897","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$b21a6e049949bb31$export$f883a24d5edde77c","$bac43a1f4a628548$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$bac43a1f4a628548$var$getSmoothClampedResolution","$bac43a1f4a628548$export$d65a517690fc4385","resolutions","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","capped","z","$bac43a1f4a628548$export$22ac0f6b219de91a","power","opt_minResolution","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","$bac43a1f4a628548$export$1c4e6da9b4b066fe","$d65f0a322291d127$export$e20fbacbb41798b","$d65f0a322291d127$export$f883a24d5edde77c","$c7ccf7e681a9b333$export$57636bb43b1ccbb0","$c7ccf7e681a9b333$export$929e5a82286172a6","$c7ccf7e681a9b333$export$9b47139b511b56e4","$c7ccf7e681a9b333$export$45db2fc2f15997e7","$70364d0195659942$var$animationCallback","returnValue","$70364d0195659942$export$964345001ee9ac52","smoothExtentConstraint","constrainOnlyCenter","multiWorld","$70364d0195659942$export$c68d65f9148da196","resolutionConstraint","zoomFactor","smoothResolutionConstraint","projExtent","constrainResolution","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","constraint","$70364d0195659942$export$4eeaa08dd550e3c0","theta","opt_tolerance","enableRotation","constrainRotation","$70364d0195659942$export$ee75376562060184","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","$70364d0195659942$var$calculateCenterOn","rotX","rotY","$70364d0195659942$export$2e2bcd8739ae039","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","$70364d0195659942$var$__extends","resolutionConstraintInfo","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","minZoom_","centerConstraint","rotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","oldPadding","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","opt_size","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","nearest","baseLevel","fit","geometryOrExtent","fromExtent","userProjection","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","$cc435a5409103773$export$622c471beb1693c7","$cc435a5409103773$export$a71a825ff42fb8e1","$cceb59c4bc2a46b0$export$2e2bcd8739ae039","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","$0b703156bb914e6f$exports","view","$70364d0195659942$exports","$cceb59c4bc2a46b0$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","$4c51fd53052a6bbc$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","then","viewOptions","setView","addOverlayInternal_","toString","control","interaction","$cceb59c4bc2a46b0$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getView","getOverlayById","group","collection","getLoading","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","$6085d006f9d0efe2$exports","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","nextExtent","setLayerGroup","computedStyle","offsetWidth","parseFloat","getClientRects","$b978dafe8f7d27ff$export$2e2bcd8739ae039","Control","target_","listenerKeys","$b978dafe8f7d27ff$var$__extends","mapEvent","$6a26ab11104d2c24$export$2e2bcd8739ae039","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$6a26ab11104d2c24$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$b978dafe8f7d27ff$exports","$a305cff1f91b3b86$export$2e2bcd8739ae039","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$a305cff1f91b3b86$var$__extends","resetNorth_","$4901e3e27e30416a$export$2e2bcd8739ae039","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$4901e3e27e30416a$var$__extends","zoomByDelta_","currentZoom","newZoom","$b4471d80e1d69273$export$ebe90cb607ad99e","$4901e3e27e30416a$exports","zoomOptions","$a305cff1f91b3b86$exports","rotateOptions","attribution","$6a26ab11104d2c24$exports","attributionOptions","$2c9e42723ccf2bfb$export$2e2bcd8739ae039","ACTIVE","$39210df8527e63e5$export$4c486572e961a974","$39210df8527e63e5$export$ace321ff2a8016ef","$39210df8527e63e5$export$2e2bcd8739ae039","Interaction","setActive","$39210df8527e63e5$var$__extends","active","$b50403621294a654$export$2e2bcd8739ae039","DoubleClickZoom","delta_","$b50403621294a654$var$__extends","stopEvent","shiftKey","$39210df8527e63e5$exports","zoomByDelta","$cf1eb502962d87a8$export$e2a20c553f6c85ce","$cf1eb502962d87a8$export$2e2bcd8739ae039","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$cf1eb502962d87a8$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$cf1eb502962d87a8$var$isPointerDraggingEvent","$edf87b50170125f7$export$84bf76cd7afc7469","conditions","pass","$edf87b50170125f7$export$573409992e89967e","altKey","metaKey","ctrlKey","$edf87b50170125f7$export$4e5f01653f9f1f82","$edf87b50170125f7$export$ae2cdf064e3b0c55","hasAttribute","activeElement","$edf87b50170125f7$export$d7ddd398f22d79ef","$edf87b50170125f7$export$ba9e5d519bc326ca","$edf87b50170125f7$export$1238ad6b5e7fff70","$edf87b50170125f7$export$194df8bad091b401","$edf87b50170125f7$export$fdc892d0d8fe3bfb","$edf87b50170125f7$export$5d31fe68a477cfbb","$edf87b50170125f7$export$e5570ca80cd8fd54","tagName","$edf87b50170125f7$export$abb7acbfa76bf3c4","pointerType","$edf87b50170125f7$export$189f0d593022b199","isPrimary","$c11585da26a016db$export$2e2bcd8739ae039","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$c11585da26a016db$var$__extends","centroid","$cf1eb502962d87a8$exports","update","getDistance","getAngle","centerpx","$197c7092261b2aa0$export$2e2bcd8739ae039","DragRotate","lastAngle_","$197c7092261b2aa0$var$__extends","$c47adf75308683a6$export$2e2bcd8739ae039","RenderBox","geometry_","startPixel_","endPixel_","$c47adf75308683a6$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","$e05f414bc3918235$var$DragBoxEventType","$e05f414bc3918235$export$7053c33c051365ea","DragBoxEvent","$e05f414bc3918235$var$__extends","$e05f414bc3918235$export$2e2bcd8739ae039","DragBox","box_","$c47adf75308683a6$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$afc7f51010a5b660$export$2e2bcd8739ae039","DragZoom","out_","out","$afc7f51010a5b660$var$__extends","factor","$e05f414bc3918235$exports","$82662515908d12f9$export$2e2bcd8739ae039","UP","DOWN","$178bb1517d626802$export$2e2bcd8739ae039","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$178bb1517d626802$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$2237fabfa170eefc$export$2e2bcd8739ae039","KeyboardZoom","$2237fabfa170eefc$var$__extends","charCode","charCodeAt","$9a54ea8d5f7a49ee$export$2e2bcd8739ae039","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$aaa378764710d71e$export$9484bbecc3c49a2e","TRACKPAD","$aaa378764710d71e$export$2e2bcd8739ae039","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$aaa378764710d71e$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$9727451f2459496c$export$2e2bcd8739ae039","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$9727451f2459496c$var$__extends","rotationDelta","touch0","touch1","$79c946b60b88d4a6$export$2e2bcd8739ae039","PinchZoom","lastDistance_","lastScaleDelta_","$79c946b60b88d4a6$var$__extends","scaleDelta","$f6170f1a08d72585$var$Circle","Circle","setCenterAndRadius","$f6170f1a08d72585$var$__extends","getRadiusSquared_","setRadius","$f6170f1a08d72585$export$2e2bcd8739ae039","$176ca75ee9f69668$exports","u","p","_maxEntries","_minEntries","leaf","_all","search","toBBox","collides","insert","_build","_splitRoot","_insert","_condense","compareMinX","compareMinY","toJSON","fromJSON","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","$7eb75c96a6b6f2c6$export$2e2bcd8739ae039","$e60011aea38e6239$export$2e2bcd8739ae039","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","getScale","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getImage","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","setRotateWithView","setScale","listenImageChange","unlistenImageChange","$e0807f400ec9a0a9$export$dc5b1400ac3a10a8","$3e99c452138b2224$export$2e2bcd8739ae039","RegularShape","canvas_","hitDetectionCanvas_","fill_","fill","origin_","radius_","radius1","radius2_","radius2","stroke_","stroke","size_","renderOptions_","$3e99c452138b2224$var$__extends","getFill","getRadius2","getStroke","createHitDetectionCanvas_","image","renderOptions","draw_","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","alpha","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineDash","lineDashOffset","getColor","getWidth","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","maxRadius","createPath_","fillStyle","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","step","angle0","radiusC","lineTo","closePath","$06150d8570b7481b$export$2e2bcd8739ae039","CircleStyle","$06150d8570b7481b$var$__extends","$3e99c452138b2224$exports","$d61d1dcaf3c44610$export$2e2bcd8739ae039","Fill","color_","setColor","$f9d0329c5c745263$export$2e2bcd8739ae039","Stroke","lineCap_","lineCap","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","getLineCap","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$8c7f6dda98e8cb9c$var$Style","Style","geometryFunction_","$8c7f6dda98e8cb9c$var$defaultGeometryFunction","image_","renderer","text_","zIndex_","getText","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","$8c7f6dda98e8cb9c$export$c314ea3f6b164147","styleFunction","$8c7f6dda98e8cb9c$var$defaultStyles","$8c7f6dda98e8cb9c$export$6865c5ac2f5ce8b6","$06150d8570b7481b$exports","$8c7f6dda98e8cb9c$export$ed1eaede5d0e77ac","styles","white","blue","$8c7f6dda98e8cb9c$export$2e2bcd8739ae039","$c8d6dc4c09ed9916$var$Property","$c8d6dc4c09ed9916$export$2e2bcd8739ae039","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","$c8d6dc4c09ed9916$var$__extends","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","$parcel$interopDefault","setRenderOrder","renderOrder","$cf547866e052f25b$var$Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","$cf547866e052f25b$export$f21891651e408226","$cf547866e052f25b$export$7a98aa5364d62ba8","$cf547866e052f25b$export$9f746cc58a899a00","$cf547866e052f25b$export$89b10f327e413e71","$cf547866e052f25b$export$2e2bcd8739ae039","$eb0e5c3938110b4c$export$2e2bcd8739ae039","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$2bb20f8873deb436$export$2e2bcd8739ae039","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","$2bb20f8873deb436$var$__extends","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","myEnds","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$b652f9dd73b29cfe$export$2e2bcd8739ae039","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","$b652f9dd73b29cfe$var$__extends","myBegin","opt_sharedData","hitDetectionImage","origin","$2bb20f8873deb436$exports","$a207f23baa5aa2c5$export$2e2bcd8739ae039","CanvasLineStringBuilder","$a207f23baa5aa2c5$var$__extends","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$7d2e8ba11a45ae8a$export$2e2bcd8739ae039","CanvasPolygonBuilder","$7d2e8ba11a45ae8a$var$__extends","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","$27569314e3df91c2$export$2e2bcd8739ae039","LINE","$79529ab61b92f869$export$ed6c897eea07a254","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$8243e906fae47bbe$export$91a016276e4aee96","middle","hanging","alphabetic","ideographic","bottom","$8243e906fae47bbe$export$2e2bcd8739ae039","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","$8243e906fae47bbe$var$__extends","fillState","strokeState","textState","geometryType","placement","geometryWidths","beg_1","keep","saveTextStates_","backgroundFill","backgroundStroke","p0","p1","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","range","drawChars_","strokeKey","textKey","textBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","$e22658f4b743550b$var$BATCH_CONSTRUCTORS","$7d2e8ba11a45ae8a$exports","Default","$b652f9dd73b29cfe$exports","$a207f23baa5aa2c5$exports","Text","$8243e906fae47bbe$exports","$e22658f4b743550b$export$2e2bcd8739ae039","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$cb18cdefd702a327$export$2e2bcd8739ae039","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$cb18cdefd702a327$var$__extends","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","imageState","$42152f52b26b6ca7$export$2e2bcd8739ae039","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","$42152f52b26b6ca7$var$__extends","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","beginPath","moveTo","clip","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","newCanvas","newContext","clearRect","getImageData","err","Uint8Array","$cb18cdefd702a327$exports","$e74ccf0666398498$export$2e2bcd8739ae039","DEFAULT","IMAGE","$f6421f31729929e6$export$153a9a17ab3e949f","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","iStart","charLength","chars","substring","$6526fa4ee42dc39d$var$tmpExtent","$6526fa4ee42dc39d$var$p1","$6526fa4ee42dc39d$var$p2","$6526fa4ee42dc39d$var$p3","$6526fa4ee42dc39d$var$p4","$6526fa4ee42dc39d$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$6526fa4ee42dc39d$var$rtlRegEx","fromCharCode","$6526fa4ee42dc39d$var$horizontalTextAlign","align","test","TEXT_ALIGN","$6526fa4ee42dc39d$export$2e2bcd8739ae039","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","p4","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","origin_1","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","transform1","transform2","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","i_1","ii_1","execute","executeHitDetection","$a34a824d875e4ea1$var$ORDER","$a34a824d875e4ea1$var$ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","hitExtent","indexes","$a34a824d875e4ea1$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$a34a824d875e4ea1$export$96fc84ea21b8269f","featureCallback","imageData","idx","result_1","executor","zs","opt_builderTypes","builderTypes","$a34a824d875e4ea1$export$2e2bcd8739ae039","$7b0c2128a27f5020$export$2e2bcd8739ae039","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","$7b0c2128a27f5020$var$__extends","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","transformGeom2D","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imageAnchor","imageOrigin","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$61c65c2463af340d$export$2e2bcd8739ae039","FRACTION","$546509bca2d85ec0$export$2e2bcd8739ae039","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","$5edd00bd92be9cf8$export$2e2bcd8739ae039","ImageBase","$5edd00bd92be9cf8$var$__extends","$b54439be79d4619a$export$bc96ecc7c2a50764","loadHandler","errorHandler","img","promise","listening_1","catch","ImageWrapper","imageLoadFunction","src_","unlisten_","imageLoadFunction_","$b54439be79d4619a$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","$5edd00bd92be9cf8$exports","$0e5ad1d3b638689e$var$taintedTestContext","$0e5ad1d3b638689e$var$IconImage","IconImage","imageState_","tainted_","$0e5ad1d3b638689e$var$__extends","isTainted_","dispatchChangeEvent_","replaceColor_","fillRect","getSrc","$b54439be79d4619a$exports","listenImage","ctx","globalCompositeOperation","imgData","putImageData","$0e5ad1d3b638689e$export$3988ae62b71be9a3","$8463d325b53eeb0c$export$2e2bcd8739ae039","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize","iconImage_","$0e5ad1d3b638689e$exports","offset_","offsetOrigin_","offsetOrigin","$8463d325b53eeb0c$var$__extends","setAnchor","iconImageSize","$13dfa0283bf5c35f$export$bd05e394339d469","transforms","imageSmoothingEnabled","$7b0c2128a27f5020$exports","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","imgContext","$8463d325b53eeb0c$exports","byGeometryType","zIndexKeys","geomAndStyle","kk","$13dfa0283bf5c35f$export$6d4d555ddbfffa32","resultFeatures","$4b9ac454600c05d2$var$GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","$4b9ac454600c05d2$export$531ddd8416d52dfc","feature1","feature2","$4b9ac454600c05d2$export$75084a70d324c1e6","$4b9ac454600c05d2$export$bdacc5b475012edb","$4b9ac454600c05d2$export$36f470a33a42f413","$4b9ac454600c05d2$var$renderGeometry","$4b9ac454600c05d2$var$renderFeatureInternal","$659e0e97392a5f5e$export$2e2bcd8739ae039","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","$659e0e97392a5f5e$var$__extends","renderWorlds","executorGroup","vectorSource","endWorld","world","clipped","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","gutter","loadExtent","declutterBuilderGroup","userTransform","userExtent_1","loadFeatures","dirty","renderFeature","userExtent","getFeaturesInExtent","replayGroupInstructions","getOverlaps","$42152f52b26b6ca7$exports","$82a68515bd6ef378$export$2e2bcd8739ae039","VectorLayer","$82a68515bd6ef378$var$__extends","$659e0e97392a5f5e$exports","$c8d6dc4c09ed9916$exports","$34c742891733e7a4$export$2e2bcd8739ae039","RBush","opt_maxEntries","rbush_","items_","extents","items","uid","getAll","getInExtent","bbox","forEach_","forEachInExtent","rbush","$ed6dc99f268f3882$var$adaptAttributions","attributionLike","$ed6dc99f268f3882$export$2e2bcd8739ae039","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","viewResolver","viewRejector","viewPromise_","reject","$ed6dc99f268f3882$var$__extends","getContextOptions","refresh","setAttributions","setState","$ccc4e6f11f11978f$export$2e2bcd8739ae039","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","$eb51d0a16123ee90$export$84bf76cd7afc7469","$588823c001569193$var$withCredentials","$588823c001569193$export$14cc81df70b6707e","url","format","success","failure","xhr","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","response","onerror","send","$588823c001569193$export$441d7b57adab24d0","addFeatures","$84888e4daf3fdf44$export$d402fd02dc2b661c","VectorSourceEvent","opt_feature","opt_features","$84888e4daf3fdf44$var$__extends","$84888e4daf3fdf44$export$2e2bcd8739ae039","VectorSource","loader_","format_","url_","loader","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","setUrl","$ed6dc99f268f3882$exports","$55fa2487efb2d4e1$var$Mode","$55fa2487efb2d4e1$var$DrawEventType","$55fa2487efb2d4e1$export$85a4910380d251a7","DrawEvent","$55fa2487efb2d4e1$var$__extends","$55fa2487efb2d4e1$export$e636e17021965266","opt_geometry","fromCircle","$f6170f1a08d72585$exports","makeRegular","$55fa2487efb2d4e1$export$6459fc9e86be362e","boxCoordinates","$55fa2487efb2d4e1$export$2e2bcd8739ae039","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","pointerType_","freehand_","source_","features_","snapTolerance_","snapTolerance","type_","$55fa2487efb2d4e1$var$getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","Constructor_1","mode_1","squaredLength","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","$82a68515bd6ef378$exports","$84888e4daf3fdf44$exports","freehandCondition_","freehand","freehandCondition","updateState_","getOverlay","move","addToDrawing_","startDrawing_","startingToDraw","finishDrawing","atFinish_","abortDrawing","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","mode","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","createOrUpdateCustomSketchLine_","ring","sketchLineGeom","removeLastPoint","sketchFeature","abortDrawing_","appendCoordinates","newDrawing","ending","sketchFeatures","overlaySource","$8c24f34a0807f744$var$tempExtent","$8c24f34a0807f744$var$tempSegment","$8c24f34a0807f744$var$ModifyEventType","$8c24f34a0807f744$export$eb2af8bb6aa1fb54","ModifyEvent","$8c24f34a0807f744$var$__extends","$8c24f34a0807f744$var$compareIndexes","$8c24f34a0807f744$var$projectedDistanceToSegmentDataSquared","pointCoordinates","segmentData","distanceToCenterSquared","distanceToCircumference","$8c24f34a0807f744$var$closestOnSegmentData","$8c24f34a0807f744$export$2e2bcd8739ae039","Modify","boundHandleFeatureChange_","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexFeature_","vertexSegments_","lastPixel_","ignoreNextSingleClick_","featuresBeingModified_","rBush_","pixelTolerance_","pixelTolerance","snappedToVertex_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","hitDetection_","handleSourceAdd_","handleSourceRemove_","hitDetection","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","snapToPointer_","snapToPointer","writer","handlePointerAtPixel_","willModifyFeatures_","segments","ss","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","nodeToRemove","depth","rings","centerSegmentData","circumferenceSegmentData","featureSegments","geometry_1","createOrUpdateVertexFeature_","vertexFeature","removePoint","vertex","dragSegment","setGeometryCoordinates_","pixelCoordinate","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","insertVertex_","opt_coordinate","nodes","hitPointGeometry","closestSegment","vertexPixel","dist","vertexSegments","pixel1","pixel2","squaredDist1","squaredDist2","geometryUid","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","component","newIndex","dragSegments","segmentsByFeature","deleted","$d4ff3154db04ce79$var$getFeatureFromEvent","$d4ff3154db04ce79$var$tempSegment","$d4ff3154db04ce79$export$2e2bcd8739ae039","Snap","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","$d4ff3154db04ce79$var$__extends","opt_listen","register","feature_uid","segmentWriter","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","snapTo","snapped","updateFeature_","featuresToUpdate","opt_unlisten","unregister","nodesToRemove_1","currentMap","closestSegmentData","projectedCoordinate","isCircle","$fdc8b40501c0cf45$export$ebe90cb607ad99e","altShiftDragRotate","$197c7092261b2aa0$exports","doubleClickZoom","$b50403621294a654$exports","zoomDelta","zoomDuration","dragPan","$c11585da26a016db$exports","pinchRotate","$9727451f2459496c$exports","pinchZoom","$79c946b60b88d4a6$exports","keyboard","$178bb1517d626802$exports","$2237fabfa170eefc$exports","mouseWheelZoom","$aaa378764710d71e$exports","shiftDragZoom","$afc7f51010a5b660$exports","$41aa29ae0c4b607a$export$2e2bcd8739ae039","Map","$41aa29ae0c4b607a$var$__extends","$fa78c97693b12120$exports","$cceb59c4bc2a46b0$exports","$efd3ba4ec2608b1d$var$geodesicStyle","$efd3ba4ec2608b1d$var$style","$efd3ba4ec2608b1d$var$source","$f602cef51a2e6950$exports","$efd3ba4ec2608b1d$var$map","$41aa29ae0c4b607a$exports","$efd3ba4ec2608b1d$var$defaultStyle","$8c24f34a0807f744$exports","$efd3ba4ec2608b1d$var$modify","modifyFeature","modifyGeometry","modifyPoint","center1","circular","$efd3ba4ec2608b1d$var$draw","$efd3ba4ec2608b1d$var$snap","$efd3ba4ec2608b1d$var$typeSelect","$efd3ba4ec2608b1d$var$addInteractions","$55fa2487efb2d4e1$exports","$d4ff3154db04ce79$exports","onchange","$efd3ba4ec2608b1d$var$i","$efd3ba4ec2608b1d$var$angle","$efd3ba4ec2608b1d$var$fraction","$efd3ba4ec2608b1d$var$offsetX","$efd3ba4ec2608b1d$var$offsetY","newCoordinates"],"version":3,"file":"index.45fae57a.js.map"}